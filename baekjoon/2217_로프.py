'''
문제
N(1 ≤ N ≤ 100,000)개의 로프가 있다. 이 로프를 이용하여 이런 저런 물체를 들어올릴 수 있다. 각각의 로프는 그 굵기나 길이가 다르기 때문에 들 수 있는 물체의 중량이 서로 다를 수도 있다.

하지만 여러 개의 로프를 병렬로 연결하면 각각의 로프에 걸리는 중량을 나눌 수 있다. k개의 로프를 사용하여 중량이 w인 물체를 들어올릴 때, 각각의 로프에는 모두 고르게 w/k 만큼의 중량이 걸리게 된다.

각 로프들에 대한 정보가 주어졌을 때, 이 로프들을 이용하여 들어올릴 수 있는 물체의 최대 중량을 구해내는 프로그램을 작성하시오. 모든 로프를 사용해야 할 필요는 없으며, 임의로 몇 개의 로프를 골라서 사용해도 된다.
'''

# 각각의 로프에 고르게 w/k만큼 무게가 분배되므로 k개의 로프를 사용했을 때 최대 중량이 가장 낮은 로프를 만족시키면 된다.
# 따라서 최대 중량이 가장 높은 로프 순으로 정렬 후 차례대로 최대 중량을 구해서 현재까지 구한 최대 중량과 비교하면 되겠다고 생각했다.

import sys

def algorithm():
    max_weight = 0   # 임시 최대 중량

    # 정렬된 최대 중량을 차례대로 사용해가며 최대 중량을 구함
    # enumerate를 사용하여 사용한 로프 개수와 현재 최대 중량이 가장 낮은 로프를 동시에 이용할 수 있다.
    for i, w in enumerate(weights):
        value = (i+1) * w       # 현재 상태에서 가능한 최대 중량을 구함 ( 사용한 로프 개수 * 최대 중량이 가장 낮은 로프의 최대중량)
        if value > max_weight:  # 현재까지 구한 최대 중량과 비교하여 더 높으면 할당한다.
            max_weight = value
    return max_weight           # 반복문이 모두 끝나면 적절한 최대 중량 반환

if __name__ == "__main__":
    N = int(sys.stdin.readline())
    weights = [int(sys.stdin.readline()) for _ in range(N)]
    weights.sort(reverse=True)
    print(algorithm())